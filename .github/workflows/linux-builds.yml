name: Linux builds

on:
  push:
    branches:
    - main
    - feature/*
  pull_request:
    branches:
    - main
    - feature/*

env:
  BUILD_TYPE: Release

jobs:
  build-server-version:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4

    - name: Cache Conan libs
      id: cache-conan
      uses: actions/cache@v3
      with:
        path: /home/runner/.conan
        key: ${{ runner.os }}-conan

    - name: Setup Conan
      run: |
        pip install conan
        conan profile new default --detect --force
        conan remote add gitlab https://gitlab.com/api/v4/packages/conan --force
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan config set general.revisions_enabled=1

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/bin

    - name: Get dependencies
      working-directory: ${{github.workspace}}/bin
      run: conan install .. -s build_type=${{env.BUILD_TYPE}} -o build_viewer=False -o with_gui=False -o enable_tests=True --build=missing

    - name: Build
      working-directory: ${{github.workspace}}/bin
      run: conan build ..

    - name: Test
      working-directory: ${{github.workspace}}/bin/tests
      run: ./atmoswing-tests


  build-desktop-version:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4

      - name: Install system libraries
        run: sudo apt install libgtk-3-dev

      - name: Cache Conan libs
        id: cache-conan
        uses: actions/cache@v3
        with:
          path: /home/runner/.conan
          key: ${{ runner.os }}-conan

      - name: Setup Conan
        run: |
          pip install conan
          conan profile new default --detect --force
          conan remote add gitlab https://gitlab.com/api/v4/packages/conan --force
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan profile update tools.system.package_manager:mode=install default
          conan config set general.revisions_enabled=1

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/bin

      - name: Get dependencies
        working-directory: ${{github.workspace}}/bin
        run: conan install .. -s build_type=${{env.BUILD_TYPE}} -o build_viewer=True -o with_gui=True -o enable_tests=True --build=missing

      - name: Build
        working-directory: ${{github.workspace}}/bin
        run: conan build ..

      - name: Test
        working-directory: ${{github.workspace}}/bin/tests
        run: ./atmoswing-tests


  coverage-scan:
    runs-on: ubuntu-22.04

    env:
      BUILD_TYPE: RelWithDebInfo

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4

      - name: Cache Conan libs
        id: cache-conan
        uses: actions/cache@v3
        with:
          path: /home/runner/.conan
          key: ${{ runner.os }}-conan

      - name: Setup Conan
        run: |
          pip install conan
          conan profile new default --detect --force
          conan remote add gitlab https://gitlab.com/api/v4/packages/conan --force
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan config set general.revisions_enabled=1

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/bin

      - name: Get dependencies
        working-directory: ${{github.workspace}}/bin
        run: conan install .. -s build_type=${{env.BUILD_TYPE}} -o build_viewer=False -o with_gui=False -o enable_tests=True -o code_coverage=True --build=missing

      - name: Build
        working-directory: ${{github.workspace}}/bin
        run: conan build ..

      - name: Preparing coverage data
        run: lcov --directory . --capture --output-file coverage.info

      - name: Cleaning up coverage data
        run: lcov --remove coverage.info "/usr/*" "*/_deps/*" "*/tests/*" --output-file coverage.info

      - name: Display code coverage report
        run: lcov --list coverage.info

      - uses: codecov/codecov-action@v2
        with:
          files: ./coverage.info
          fail_ci_if_error: true
          verbose: true
