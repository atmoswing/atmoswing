##
# atmoswing/forecaster-server:ubuntu:arm64

# Steps ordered from the less frequently changed to the more frequently
# changed to ensure the build cache is reused.

FROM arm64v8/debian:bullseye AS builder

WORKDIR /app
RUN mkdir libs
ARG LIB_DIR=/app/libs

# Setup build environment
RUN apt-get update -y && apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates\
    git \
    gnome-devel \
    libssl-dev \
    make \
    cmake \
    openssl \
    unzip \
    wget

# Install dependencies
RUN apt-get update -y && apt-get install -y --no-install-recommends \
    libcurl4 \
    libnetcdf-dev \
    libopenjp2-7-dev \
    libsqlite3-dev \
    sqlite3 \
    libcurl4-openssl-dev \
    libssl-dev \
    libtiff5-dev \
    libwxbase3.0-dev \
    libproj-dev \
    libeccodes-dev

# Build Jasper
ARG JASPER_VERSION=2.0.16
RUN wget --no-check-certificate --tries=20 -O jasper.tar.gz \
        https://github.com/mdadams/jasper/archive/version-${JASPER_VERSION}.tar.gz \
    && tar -xzf jasper.tar.gz \
    && rm -f jasper.tar.gz \
    && cd jasper-version-${JASPER_VERSION} \
    && mkdir bld \
    && cd bld \
    && cmake .. -DCMAKE_INSTALL_PREFIX=${LIB_DIR} -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${LIB_DIR} \
    && make -j$(nproc) \
    && make install \
    && cd .. \
    && cd .. \
    && rm -rf jasper-version-${JASPER_VERSION}

# Copy source code
RUN mkdir src
COPY ./ src

# Build AtmoSwing
RUN cd src \
    && cmake CMakeLists.txt -DBUILD_OPTIMIZER=0 -DBUILD_FORECASTER=1 -DBUILD_DOWNSCALER=0 -DBUILD_VIEWER=0 \
        -DON_DOCKER=ON -DCREATE_INSTALLER=OFF -DUSE_GUI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=$LIB_DIR \
    && make -j$(nproc)

# Prepare files for deployment
RUN mkdir /app/deploy \
    && mkdir /app/deploy/lib \
    && mkdir /app/deploy/bin
RUN cp -a /app/libs/lib/*.so* /app/deploy/lib/ \
    && cp -a /app/libs/share /app/deploy/share \
    && cp -a /app/src/data /app/deploy/share/atmoswing \
    && cp -a /app/src/Release/* /app/deploy/bin/


# Build final image
FROM arm64v8/debian:bullseye-slim AS runner

WORKDIR /app

# Install dependencies
RUN apt-get update -y && apt-get install -y --no-install-recommends \
    ca-certificates \
    libcurl4 \
    libnetcdf18 \
    libopenjp2-7 \
    libtiff5 \
    libwxbase3.0-0v5 \
    openssl \
    sqlite3 \
    libproj19 \
    libeccodes0 \
    unzip

# Copy from builder
COPY --from=builder  /app/deploy /usr/local

ENTRYPOINT ["/usr/local/bin/atmoswing-forecaster"]
CMD ["--help"]
