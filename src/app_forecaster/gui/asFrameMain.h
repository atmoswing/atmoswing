/** 
 *
 *  This file is part of the AtmoSwing software.
 *
 *  Copyright (c) 2008-2012  University of Lausanne, Pascal Horton (pascal.horton@unil.ch). 
 *  All rights reserved.
 *
 *  THIS CODE, SOFTWARE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY  
 *  OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
 *  PURPOSE.
 *
 */
 
#ifndef __asFrameMain__
#define __asFrameMain__

/**
@file
Subclass of asFrameMainVirtual, which is generated by wxFormBuilder.
*/

#include "AtmoswingForecasterGui.h"
#include "asIncludes.h"
#include "asLogWindow.h"
#include "asMethodForecasting.h"
#include <asPanelsManagerForecastingModels.h>

class asPanelsManagerForecastingModels;

/** Implementing asFrameMainVirtual */
class asFrameMain : public asFrameMainVirtual
{

public:
    /** Constructor */
    asFrameMain( wxWindow* parent );
    ~asFrameMain();

    void OnInit();

    double GetForecastDate();
    void SetForecastDate( double date );


protected:
    asLogWindow *m_LogWindow;
    asMethodForecasting *m_Forecaster;

    // Handlers for asFrameMainVirtual events.
    void Update();
    void GoToViewer( wxCommandEvent& event );
    void OpenFrameXmlEditor( wxCommandEvent& event );
    void OpenFramePredictandDB( wxCommandEvent& event );
    void OpenFramePreferences( wxCommandEvent& event );
    void OpenFrameAbout( wxCommandEvent& event );
    void OnShowLog( wxCommandEvent& event );
    void OnLogLevel1( wxCommandEvent& event );
    void OnLogLevel2( wxCommandEvent& event );
    void OnLogLevel3( wxCommandEvent& event );
    void OnStatusMethodUpdate( wxCommandEvent& event );
    void OnSetPresentDate( wxCommandEvent& event );
    void DisplayLogLevelMenu();
    void LaunchForecasting( wxCommandEvent& event );
    void CancelForecasting( wxCommandEvent& event );
    void AddForecastingModel( wxCommandEvent& event );
    void SetPresentDate();
    void ModelsListSaveAsDefault( wxCommandEvent& event );
    bool ModelsListSaveAsCurrent();
    void ModelsListLoadDefault( wxCommandEvent& event );
    void ModelsListLoadDefault();
    void ModelsListSave( wxCommandEvent& event );
    void ModelsListLoad( wxCommandEvent& event );

private:
    asPanelsManagerForecastingModels* m_PanelsManager;

    DECLARE_EVENT_TABLE()

};

#endif // __asFrameMain__
