/** 
 *
 *  This file is part of the AtmoSwing software.
 *
 *  Copyright (c) 2008-2012  University of Lausanne, Pascal Horton (pascal.horton@unil.ch). 
 *  All rights reserved.
 *
 *  THIS CODE, SOFTWARE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY  
 *  OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
 *  PURPOSE.
 *
 */
 
#ifndef __asFramePlotDistributions__
#define __asFramePlotDistributions__

/**
@file
Subclass of asFramePlotDistributions, which is generated by wxFormBuilder.
*/

#include "AtmoswingViewerGui.h"
#include "asPanelPlot.h"

class asForecastManager;

/** Implementing asFramePlotDistributions */
class asFramePlotDistributions : public asFramePlotDistributionsVirutal
{
public:
    /** Constructor */
    asFramePlotDistributions( wxWindow* parent, int selectedForecast, asForecastManager *forecastManager, wxWindowID id=asWINDOW_PLOTS_DISTRIBUTIONS );
    /** Destructor */
    ~asFramePlotDistributions();

    void Init();
    bool Plot();
    bool PlotPredictands();
    bool PlotCriteria();

protected:


private:
    enum PlotPredictandsData
    {
        ClassicPercentiles,
        AllAnalogsPoints,
        AllAnalogsCurve,
        BestAnalogs10Points,
        BestAnalogs10Curve,
        BestAnalogs5Points,
        BestAnalogs5Curve,
        ClassicReturnPeriod,
        AllReturnPeriods
    };

    asPanelPlot *m_PanelPlotPredictands;
    asPanelPlot *m_PanelPlotCriteria;
    asForecastManager *m_ForecastManager;
    int m_SelectedForecast;
    int m_SelectedStation;
    int m_SelectedDate;
    int m_XmaxPredictands;

    void InitPredictandsCheckListBox();
    void InitPredictandsPlotCtrl();
    void InitCriteriaPlotCtrl();
    void PlotAllReturnPeriods();
    void PlotReturnPeriod(int returnPeriod);
    void PlotAllAnalogsPoints();
    void PlotAllAnalogsCurve();
    void PlotBestAnalogsPoints(int analogsNb);
    void PlotBestAnalogsCurve(int analogsNb);
    void PlotClassicPercentiles();
    void PlotCriteriaCurve();
    void OnChoiceForecastChange( wxCommandEvent& event );
    void OnChoiceStationChange( wxCommandEvent& event );
    void OnChoiceDateChange( wxCommandEvent& event );
    void OnTocSelectionChange( wxCommandEvent& event );
    void OnClose( wxCloseEvent& evt );

    DECLARE_EVENT_TABLE()
};

#endif // __asFramePlotDistributions__
