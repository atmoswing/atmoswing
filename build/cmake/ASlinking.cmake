if (BUILD_FORECASTER)
    target_link_libraries(asbase ${GDAL_LIBRARIES})
    target_link_libraries(atmoswing-forecaster asbase)
    target_link_libraries(atmoswing-forecaster asprocessing)
    target_link_libraries(atmoswing-forecaster ${wxWidgets_LIBRARIES})
    target_link_libraries(atmoswing-forecaster ${NetCDF_LIBRARIES})
    target_link_libraries(atmoswing-forecaster ${JPEG_LIBRARY})
    target_link_libraries(atmoswing-forecaster ${PNG_LIBRARIES})
    target_link_libraries(atmoswing-forecaster ${JASPER_LIBRARIES})
    target_link_libraries(atmoswing-forecaster g2clib)
    target_link_libraries(atmoswing-forecaster ${CURL_LIBRARIES})
    target_link_libraries(atmoswing-forecaster ${GDAL_LIBRARIES})
    if (USE_WXHGVERSION)
        target_link_libraries(atmoswing-forecaster ${WXHGVERSION_NAME})
    endif (USE_WXHGVERSION)
    if (USE_VLD)
        target_link_libraries(atmoswing-forecaster ${VLD_LIBRARIES})
    endif (USE_VLD)
endif (BUILD_FORECASTER)

if (BUILD_VIEWER)
    target_link_libraries(asbase ${GDAL_LIBRARIES})
    target_link_libraries(atmoswing-viewer asbase)
    target_link_libraries(atmoswing-viewer ${wxWidgets_LIBRARIES})
    target_link_libraries(atmoswing-viewer ${NetCDF_LIBRARIES})
    target_link_libraries(atmoswing-viewer ${JPEG_LIBRARY})
    target_link_libraries(atmoswing-viewer ${PNG_LIBRARIES})
    target_link_libraries(atmoswing-viewer ${JASPER_LIBRARIES})
    target_link_libraries(atmoswing-viewer g2clib)
    target_link_libraries(atmoswing-viewer ${CURL_LIBRARIES})
    target_link_libraries(atmoswing-viewer ${GDAL_LIBRARIES})
    target_link_libraries(atmoswing-viewer ${VROOMGIS_LIBRARY})
    target_link_libraries(atmoswing-viewer wxplotctrl)
    if (USE_WXHGVERSION)
        target_link_libraries(atmoswing-viewer ${WXHGVERSION_NAME})
    endif (USE_WXHGVERSION)
    if (USE_VLD)
        target_link_libraries(atmoswing-viewer ${VLD_LIBRARIES})
    endif (USE_VLD)
    if (WIN32)
        target_link_libraries(atmoswing-viewer Psapi.lib)
    endif (WIN32)
endif (BUILD_VIEWER)

if (BUILD_OPTIMIZER)
    target_link_libraries(atmoswing-optimizer asbase)
    target_link_libraries(atmoswing-optimizer asprocessing)
    target_link_libraries(atmoswing-optimizer ${wxWidgets_LIBRARIES})
    target_link_libraries(atmoswing-optimizer ${NetCDF_LIBRARIES})
    target_link_libraries(atmoswing-optimizer ${JPEG_LIBRARY})
    target_link_libraries(atmoswing-optimizer ${PNG_LIBRARIES})
    target_link_libraries(atmoswing-optimizer ${JASPER_LIBRARIES})
    target_link_libraries(atmoswing-optimizer g2clib)
    if (USE_WXHGVERSION)
        target_link_libraries(atmoswing-optimizer ${WXHGVERSION_NAME})
    endif (USE_WXHGVERSION)
    if (USE_VLD)
        target_link_libraries(atmoswing-optimizer ${VLD_LIBRARIES})
    endif (USE_VLD)
    if (USE_CUDA)
        target_link_libraries(ascuda ${CUDA_CUDA_LIBRARY})
        add_dependencies(atmoswing-optimizer ascuda)
        target_link_libraries(atmoswing-optimizer ascuda)
    endif (USE_CUDA)
endif (BUILD_OPTIMIZER)

if (BUILD_TESTS)
    add_dependencies(atmoswing-tests googletest)
    target_link_libraries(atmoswing-tests gtest gtest_main pthread)
    target_link_libraries(atmoswing-tests asbase)
    target_link_libraries(atmoswing-tests asprocessing)
    target_link_libraries(atmoswing-tests ${wxWidgets_LIBRARIES})
    target_link_libraries(atmoswing-tests ${NetCDF_LIBRARIES})
    target_link_libraries(atmoswing-tests ${JPEG_LIBRARY})
    target_link_libraries(atmoswing-tests ${PNG_LIBRARIES})
    target_link_libraries(atmoswing-tests ${JASPER_LIBRARIES})
    target_link_libraries(atmoswing-tests g2clib)
    target_link_libraries(atmoswing-tests ${CURL_LIBRARIES})
    if (BUILD_FORECASTER)
        target_link_libraries(atmoswing-tests ${GDAL_LIBRARIES})
    endif (BUILD_FORECASTER)
    if (USE_VLD)
        target_link_libraries(atmoswing-tests ${VLD_LIBRARIES})
    endif (USE_VLD)
    if (USE_CUDA)
        target_link_libraries(ascuda ${CUDA_CUDA_LIBRARY})
        add_dependencies(atmoswing-tests ascuda)
        target_link_libraries(atmoswing-tests ascuda)
    endif (USE_CUDA)
endif (BUILD_TESTS)